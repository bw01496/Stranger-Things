{"ast":null,"code":"const WEB = \"http://localhost:3000/api/2108-ECE-RM-WEB-PT\";\nexport const callApi = async _ref => {\n  let {\n    url,\n    method,\n    body,\n    token\n  } = _ref;\n  console.log(method);\n\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n    if (token) options.headers[\"Authorization\"] = `Bearer ${token}`;\n    const response = await fetch(`${WEB}${url}`, options);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/util/api.js"],"names":["WEB","callApi","url","method","body","token","console","log","options","toUpperCase","headers","JSON","stringify","response","fetch","data","json","error"],"mappings":"AAAA,MAAOA,GAAG,GAAI,8CAAd;AAGA,OAAO,MAAMC,OAAO,GAAG,cAAqC;AAAA,MAA/B;AAACC,IAAAA,GAAD;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,GAA+B;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AACA,MAAI;AACF,UAAMK,OAAO,GAAG;AACdL,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACM,WAAP,EAAH,GAA0B,KAD1B;AAEdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFK;AAKdN,MAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AALS,KAAhB;AAOD,QAAGC,KAAH,EAAUG,OAAO,CAACE,OAAR,CAAgB,eAAhB,IAAoC,UAASL,KAAM,EAAnD;AACV,UAAMQ,QAAQ,GAAI,MAAMC,KAAK,CAAG,GAAEd,GAAI,GAAEE,GAAI,EAAf,EAAkBM,OAAlB,CAA7B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACA,GAZD,CAYC,OAAME,KAAN,EAAY;AACXX,IAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACD;AACD,CAjBK","sourcesContent":["const  WEB  = \"http://localhost:3000/api/2108-ECE-RM-WEB-PT\" \n\n\nexport const callApi = async({url, method, body, token}) => {\n  console.log(method)\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body:JSON.stringify(body)\n    }\n   if(token) options.headers[\"Authorization\"] = `Bearer ${token}`\n   const response =  await fetch (`${WEB}${url}`, options)\n   const data = await response.json()\n   return data\n  }catch(error){\n    console.error(error)\n  }\n }"]},"metadata":{},"sourceType":"module"}