{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport { callApi } from '../util/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = '2108-ECE-RM-WEB-PT';\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const params = useParams();\n  const [loggedIn, setLoggedin] = useState(false); // function logIn(response){\n  //     if (response.data){\n  //         setToken(response.data.token)\n  //         if(response.data.token == ''){\n  //             setLoggedin(false)\n  //         }else{\n  //             setLoggedin(true)\n  //             navigate('/profile')\n  //         }\n  //     }\n  // }\n  // function isLoggedIn(){\n  //         return token === ''\n  // }\n  // function logOut(){\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login/Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        const URL = `${APIURL}/users/login`;\n        console.log(URL);\n\n        try {\n          const response = await fetch(URL, {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json' // 'Authorization': 'Bearer ${token}'\n\n            },\n            body: JSON.stringify({\n              user: {\n                username,\n                password\n              }\n            })\n          });\n          const responseObj = await response.json();\n          console.log(responseObj);\n          return responseObj;\n        } catch (error) {\n          console.error(error);\n        } //    console.log(responseObj.data.token)\n        //    console.log(responseObj)\n\n\n        if (responseObj.data.token) {\n          setToken(responseObj.data.token);\n          navigate('/');\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !password || !username,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"u3X28HRpGgqMnu/47ijFehccV4Q=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/Login.js"],"names":["React","useState","useParams","useNavigate","callApi","cohortName","APIURL","Login","setToken","username","setUsername","password","setPassword","navigate","params","loggedIn","setLoggedin","event","preventDefault","URL","console","log","response","fetch","method","headers","body","JSON","stringify","user","responseObj","json","error","data","token","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { useParams,useNavigate } from 'react-router';\nimport { callApi } from '../util/api';\n\n\nconst cohortName = '2108-ECE-RM-WEB-PT';\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n\n\n\nconst Login = ({setToken}) =>{\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n    const params = useParams();\n    const [loggedIn, setLoggedin] = useState(false)\n\n    // function logIn(response){\n    //     if (response.data){\n    //         setToken(response.data.token)\n    //         if(response.data.token == ''){\n    //             setLoggedin(false)\n    //         }else{\n    //             setLoggedin(true)\n    //             navigate('/profile')\n    //         }\n    //     }\n    // }\n    \n    // function isLoggedIn(){\n    //         return token === ''\n    // }\n\n    // function logOut(){\n\n    // }\n\n        \n    return <>\n\n    <h1>Login/Register</h1>\n    {/* // we need to send a fetch request, so we can get the token\n          // in order to get a token, the server wants... username and password \n          //When I hit submit it is supposed the username and password from the API. \n          \n          */}\n\n\n    <form onSubmit={async(event) =>{\n        event.preventDefault();\n        const URL = (`${APIURL}/users/login`)\n        console.log(URL)\n       try{\n        const response = await fetch(URL, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Authorization': 'Bearer ${token}'\n        \n            },\n            body: JSON.stringify({\n                user:{\n                    username,\n                    password\n                }\n            })\n        })\n        const responseObj = await response.json();\n        console.log(responseObj)\n        return responseObj\n        \n         \n       } catch (error){\n           console.error(error)\n          \n       }\n    //    console.log(responseObj.data.token)\n    //    console.log(responseObj)\n        if(responseObj.data.token) {\n        setToken(responseObj.data.token)\n        navigate('/');\n        }\n    }}>\n        <input type=\"text\" placeholder=\"username\" value={username} \n        onChange={(event) => setUsername(event.target.value)}></input>\n        <hr></hr>\n\n        <input type= \"text\" placeholder = \"password\" value={password} \n        onChange ={(event) => setPassword(event.target.value)}></input>\n        <hr></hr>\n        <button type=\"submit\" disabled={!password || !username}>Submit</button>      \n        \n    </form>\n    </>\n}\n\nexport default Login;     "]},"metadata":{},"sourceType":"module"}