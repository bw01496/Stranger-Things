{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { callApi } from \"../util/api\";\n// const cohortName = \"2108-ECE-RM-WEB-PT\";\n// const APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n// // Include token here in createpost after I have that set up\n// const EditPosts = ({ token, setPosts, postId, setPostId }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [price, setPrice] = useState(\"\");\n//   const [location, setLocation] = useState(\"\");\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     console.log({ title, description, price, location });\n//     const response = await callApi({\n//       url: `/posts/${postId}`,\n//       method: \"PATCH\",\n//       token,\n//       body: {\n//         post: {\n//           title,\n//           description,\n//           price,\n//           location,\n//         },\n//       },\n//     });\n//     console.log(\"response: \", response);\n//     const respPost = await callApi({ url: `/posts/${postId}`, token });\n//     if (response && response.title) {\n//       const newPosts = posts.map((post) => {\n//         if (post._id === postId) {\n//           return response;\n//         } else {\n//           return post;\n//         }\n//       });\n//       setPosts(newPosts);\n//       setTitle(\"\");\n//       setDescription(\"\");\n//       setPrice(\"\");\n//       setLocation(\"\");\n//       setPostId(null);\n//     }\n//     console.log(\"respPost: \", respPost);\n//     console.log(setPosts);\n//     // setPosts(respPost.data.posts);\n//     // const response = await fetch(`${APIURL}/posts`, {\n//     //     method: 'POST',\n//     //     headers: {\n//     //         'Content-type': 'Application/json',\n//     //     },\n//     //     body: JSON.stringify({\n//     //         title,\n//     //         body,\n//     //     })\n//     // });\n//     // const data = await response.json();\n//     // setPosts([data, ...posts]);\n//     // setTitle('');\n//     // setBody('');\n//   };\n//   return (\n//     <>\n//       <h3>Edit a Post</h3>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           value={title}\n//           onChange={(event) => setTitle(event.target.value)}\n//         ></input>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Description\"\n//           value={description}\n//           onChange={(event) => setDescription(event.target.value)}\n//         ></input>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Price\"\n//           value={price}\n//           onChange={(event) => setPrice(event.target.value)}\n//         ></input>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Location\"\n//           value={location}\n//           onChange={(event) => setLocation(event.target.value)}\n//         ></input>\n//         <button type=\"submit\" className=\"btn btn-outline-primary\">\n//           Edit!\n//         </button>\n//       </form>\n//     </>\n//   );\n// };\n// export default EditPosts;","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/EditPost.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\";\n// import { callApi } from \"../util/api\";\n\n// const cohortName = \"2108-ECE-RM-WEB-PT\";\n// const APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n// // Include token here in createpost after I have that set up\n\n// const EditPosts = ({ token, setPosts, postId, setPostId }) => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [price, setPrice] = useState(\"\");\n//   const [location, setLocation] = useState(\"\");\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     console.log({ title, description, price, location });\n//     const response = await callApi({\n//       url: `/posts/${postId}`,\n//       method: \"PATCH\",\n//       token,\n//       body: {\n//         post: {\n//           title,\n//           description,\n//           price,\n//           location,\n//         },\n//       },\n//     });\n//     console.log(\"response: \", response);\n//     const respPost = await callApi({ url: `/posts/${postId}`, token });\n//     if (response && response.title) {\n//       const newPosts = posts.map((post) => {\n//         if (post._id === postId) {\n//           return response;\n//         } else {\n//           return post;\n//         }\n//       });\n//       setPosts(newPosts);\n//       setTitle(\"\");\n//       setDescription(\"\");\n//       setPrice(\"\");\n//       setLocation(\"\");\n//       setPostId(null);\n//     }\n//     console.log(\"respPost: \", respPost);\n//     console.log(setPosts);\n//     // setPosts(respPost.data.posts);\n\n//     // const response = await fetch(`${APIURL}/posts`, {\n//     //     method: 'POST',\n//     //     headers: {\n//     //         'Content-type': 'Application/json',\n//     //     },\n//     //     body: JSON.stringify({\n//     //         title,\n//     //         body,\n//     //     })\n//     // });\n//     // const data = await response.json();\n//     // setPosts([data, ...posts]);\n//     // setTitle('');\n//     // setBody('');\n//   };\n//   return (\n//     <>\n//       <h3>Edit a Post</h3>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           value={title}\n//           onChange={(event) => setTitle(event.target.value)}\n//         ></input>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Description\"\n//           value={description}\n//           onChange={(event) => setDescription(event.target.value)}\n//         ></input>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Price\"\n//           value={price}\n//           onChange={(event) => setPrice(event.target.value)}\n//         ></input>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Location\"\n//           value={location}\n//           onChange={(event) => setLocation(event.target.value)}\n//         ></input>\n//         <button type=\"submit\" className=\"btn btn-outline-primary\">\n//           Edit!\n//         </button>\n//       </form>\n//     </>\n//   );\n// };\n\n// export default EditPosts;\n"]},"metadata":{},"sourceType":"module"}