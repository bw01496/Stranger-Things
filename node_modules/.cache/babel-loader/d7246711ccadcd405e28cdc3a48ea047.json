{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { callApi } from \"../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`; // Include token here in createpost after I have that set up\n\nconst EditPosts = _ref => {\n  _s();\n\n  let {\n    token,\n    setPosts,\n    postId,\n    setPostId\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log({\n      title,\n      description,\n      price,\n      location\n    });\n    const response = await callApi({\n      url: `/posts/${postId}`,\n      method: \"PATCH\",\n      token,\n      body: {\n        post: {\n          title,\n          description,\n          price,\n          location\n        }\n      }\n    });\n    console.log(\"response: \", response);\n    const respPost = await callApi({\n      url: `/posts/${postId}`,\n      token\n    });\n\n    if (response && response.title) {\n      const newPosts = posts.map(post => {\n        if (post._id === postId) {\n          return response;\n        } else {\n          return post;\n        }\n      });\n      setPosts(newPosts);\n      setTitle(\"\");\n      setDescription(\"\");\n      setPrice(\"\");\n      setLocation(\"\");\n      setPostId(null);\n    }\n\n    console.log(\"respPost: \", respPost);\n    console.log(setPosts); // setPosts(respPost.data.posts);\n    // const response = await fetch(`${APIURL}/posts`, {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-type': 'Application/json',\n    //     },\n    //     body: JSON.stringify({\n    //         title,\n    //         body,\n    //     })\n    // });\n    // const data = await response.json();\n    // setPosts([data, ...posts]);\n    // setTitle('');\n    // setBody('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit a Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        value: price,\n        onChange: event => setPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: location,\n        onChange: event => setLocation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-primary\",\n        children: \"Edit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditPosts, \"/nKkgbidQxH/wVrtK3lJ6ufzE5M=\");\n\n_c = EditPosts;\nexport default EditPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPosts\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/EditPost.js"],"names":["React","useState","callApi","cohortName","APIURL","EditPosts","token","setPosts","postId","setPostId","title","setTitle","description","setDescription","price","setPrice","location","setLocation","handleSubmit","event","preventDefault","console","log","response","url","method","body","post","respPost","newPosts","posts","map","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { callApi } from \"../util/api\";\n\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n// Include token here in createpost after I have that set up\n\nconst EditPosts = ({ token, setPosts, postId, setPostId }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log({ title, description, price, location });\n    const response = await callApi({\n      url: `/posts/${postId}`,\n      method: \"PATCH\",\n      token,\n      body: {\n        post: {\n          title,\n          description,\n          price,\n          location,\n        },\n      },\n    });\n    console.log(\"response: \", response);\n    const respPost = await callApi({ url: `/posts/${postId}`, token });\n    if (response && response.title) {\n      const newPosts = posts.map((post) => {\n        if (post._id === postId) {\n          return response;\n        } else {\n          return post;\n        }\n      });\n      setPosts(newPosts);\n      setTitle(\"\");\n      setDescription(\"\");\n      setPrice(\"\");\n      setLocation(\"\");\n      setPostId(null);\n    }\n    console.log(\"respPost: \", respPost);\n    console.log(setPosts);\n    // setPosts(respPost.data.posts);\n\n    // const response = await fetch(`${APIURL}/posts`, {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-type': 'Application/json',\n    //     },\n    //     body: JSON.stringify({\n    //         title,\n    //         body,\n    //     })\n    // });\n    // const data = await response.json();\n    // setPosts([data, ...posts]);\n    // setTitle('');\n    // setBody('');\n  };\n  return (\n    <>\n      <h3>Edit a Post</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(event) => setDescription(event.target.value)}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Price\"\n          value={price}\n          onChange={(event) => setPrice(event.target.value)}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Location\"\n          value={location}\n          onChange={(event) => setLocation(event.target.value)}\n        ></input>\n        <button type=\"submit\" className=\"btn btn-outline-primary\">\n          Edit!\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default EditPosts;\n"]},"metadata":{},"sourceType":"module"}