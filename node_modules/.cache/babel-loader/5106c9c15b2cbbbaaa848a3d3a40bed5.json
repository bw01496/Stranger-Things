{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { callApi } from \"../util/api\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Messages = _ref => {\n  _s();\n\n  let {\n    posts,\n    userId,\n    token\n  } = _ref;\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation();\n  const {\n    id\n  } = location.state;\n  console.log(id);\n\n  async function sendMessage(message) {\n    try {\n      const resp = await callApi({\n        url: `/posts/${id}/messages`,\n        method: \"POST\",\n        token,\n        body: {\n          message: {\n            content: message\n          }\n        }\n      });\n      const data = await resp.json();\n    } catch (error) {\n      console.log(error);\n    }\n  } //   const sendMessage = async (event) => {\n  //     event.preventDefault();\n  //     console.log(`${APIURL}/posts/${id}`);\n  //     const response = await callApi({\n  //       url: `/posts/${id}/messages`,\n  //       method: \"POST\",\n  //       token,\n  //       body: {\n  //         message: {\n  //           content: message,\n  //         },\n  //       },\n  //     });\n  //     const data = await resp.json()\n  // console.log(\"response: \", response);\n  // const respPost = await callApi({ url: `/posts/${id}/messages`, token });\n  // console.log(\"respPost: \", respPost);\n  // // console.log(setPosts);\n  // userId(respPost.data.posts);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Send a Message: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), posts.map(post => id === post._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: post.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: async event => {\n          event.preventDefault();\n          sendMessage(message);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"message\",\n          value: message,\n          onChange: event => setMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this) : null)]\n  }, void 0, true);\n};\n\n_s(Messages, \"dwANQcTixha6MT5emQbH8jhQ9QU=\", false, function () {\n  return [useLocation];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/Messages.js"],"names":["React","useState","useEffect","callApi","useLocation","cohortName","APIURL","Messages","posts","userId","token","message","setMessage","location","id","state","console","log","sendMessage","resp","url","method","body","content","data","json","error","map","post","_id","title","price","description","event","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,EAAxE;;AAEA,MAAME,QAAQ,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAA6B;AAC7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMY,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAASD,QAAQ,CAACE,KAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;;AACA,iBAAeI,WAAf,CAA2BP,OAA3B,EAAoC;AAClC,QAAI;AACF,YAAMQ,IAAI,GAAG,MAAMhB,OAAO,CAAC;AACzBiB,QAAAA,GAAG,EAAG,UAASN,EAAG,WADO;AAEzBO,QAAAA,MAAM,EAAE,MAFiB;AAGzBX,QAAAA,KAHyB;AAIzBY,QAAAA,IAAI,EAAE;AACJX,UAAAA,OAAO,EAAE;AACPY,YAAAA,OAAO,EAAEZ;AADF;AADL;AAJmB,OAAD,CAA1B;AAUA,YAAMa,IAAI,GAAG,MAAML,IAAI,CAACM,IAAL,EAAnB;AACD,KAZD,CAYE,OAAOC,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD;AACF,GArB4C,CAuB7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGlB,KAAK,CAACmB,GAAN,CAAWC,IAAD,IACTd,EAAE,KAAKc,IAAI,CAACC,GAAZ,gBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,kBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAMH,IAAI,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAMJ,IAAI,CAACf;AAAX;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AACE,QAAA,QAAQ,EAAE,MAAOoB,KAAP,IAAiB;AACzBA,UAAAA,KAAK,CAACC,cAAN;AACAhB,UAAAA,WAAW,CAACP,OAAD,CAAX;AACD,SAJH;AAAA,gCAME;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,SAFd;AAGE,UAAA,KAAK,EAAEA,OAHT;AAIE,UAAA,QAAQ,EAAGsB,KAAD,IAAWrB,UAAU,CAACqB,KAAK,CAACE,MAAN,CAAaC,KAAd;AAJjC;AAAA;AAAA;AAAA;AAAA,gBANF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAA2BR,IAAI,CAACd,EAAhC;AAAA;AAAA;AAAA;AAAA,YADF,GAqBI,IAtBL,CAFH;AAAA,kBADF;AA6BD,CAxED;;GAAMP,Q;UAEaH,W;;;KAFbG,Q;AAyEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { callApi } from \"../util/api\";\nimport { useLocation } from \"react-router-dom\";\n\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Messages = ({ posts, userId, token }) => {\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation();\n  const { id } = location.state;\n  console.log(id);\n  async function sendMessage(message) {\n    try {\n      const resp = await callApi({\n        url: `/posts/${id}/messages`,\n        method: \"POST\",\n        token,\n        body: {\n          message: {\n            content: message,\n          },\n        },\n      });\n      const data = await resp.json();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //   const sendMessage = async (event) => {\n  //     event.preventDefault();\n  //     console.log(`${APIURL}/posts/${id}`);\n  //     const response = await callApi({\n  //       url: `/posts/${id}/messages`,\n  //       method: \"POST\",\n  //       token,\n  //       body: {\n  //         message: {\n  //           content: message,\n  //         },\n  //       },\n  //     });\n  //     const data = await resp.json()\n  // console.log(\"response: \", response);\n  // const respPost = await callApi({ url: `/posts/${id}/messages`, token });\n  // console.log(\"respPost: \", respPost);\n  // // console.log(setPosts);\n  // userId(respPost.data.posts);\n\n  return (\n    <>\n      <h1>Send a Message: </h1>\n      {posts.map((post) =>\n        id === post._id ? (\n          <div className=\"post\" key={post.id}>\n            <h2>{post.title}</h2>\n            <h4>{post.price}</h4>\n            <div>{post.description}</div>\n            <div>{post.location}</div>\n            <form\n              onSubmit={async (event) => {\n                event.preventDefault();\n                sendMessage(message);\n              }}\n            >\n              <input\n                type=\"text\"\n                placeholder=\"message\"\n                value={message}\n                onChange={(event) => setMessage(event.target.value)}\n              ></input>\n              <button>Send Message</button>\n            </form>\n          </div>\n        ) : null\n      )}\n    </>\n  );\n};\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}