{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { callApi } from \"../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setToken,\n    setUsers\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        const respObj = await callApi({\n          url: `/users/register`,\n          method: \"POST\",\n          body: {\n            user: {\n              username,\n              password\n            }\n          }\n        });\n        console.log(respObj);\n\n        if (respObj.data) {\n          const userResp = await callApi({\n            url: \"/users/me\",\n            token: respObj.data.token\n          });\n          console.log(userResp.data.username);\n          setToken(respObj.data.token);\n          setUsers(userResp.data.username);\n\n          if (respObj.data.token) {\n            navigate(\"/profile\");\n          }\n        } // const response = await fetch(`${APIURL}/users/register`, {\n        //     method: \"POST\",\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //     },\n        //     body: JSON.stringify({\n        //         user:{\n        //             username,\n        //             password\n        //         }\n        //     })\n        // })\n        // .catch(console.error);\n        // const responseObj = await response.json();\n        // console.log(responseObj)\n        // setToken(responseObj.data.token)\n        // console.log(setToken)\n\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"confirm password\",\n        value: confirmPassword,\n        onChange: event => setConfirmPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"k10P5rXISoKNicPMRVRgKFIP9zU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/Register.js"],"names":["React","useState","useParams","useNavigate","callApi","cohortName","APIURL","Register","setToken","setUsers","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","navigate","event","preventDefault","respObj","url","method","body","user","console","log","data","userResp","token","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { callApi } from \"../util/api\";\n\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Register = ({ setToken, setUsers }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  return (\n    <>\n      {/* Make it so my password and confirm password have to be equal in order for them to register.  */}\n\n      <h1>Register</h1>\n\n      <form\n        onSubmit={async (event) => {\n          event.preventDefault();\n          const respObj = await callApi({\n            url: `/users/register`,\n            method: \"POST\",\n            body: {\n              user: {\n                username,\n                password,\n              },\n            },\n          });\n          console.log(respObj);\n          if (respObj.data) {\n            const userResp = await callApi({\n              url: \"/users/me\",\n              token: respObj.data.token,\n            });\n            console.log(userResp.data.username);\n            setToken(respObj.data.token);\n            setUsers(userResp.data.username);\n            if (respObj.data.token) {\n              navigate(\"/profile\");\n            }\n          }\n          // const response = await fetch(`${APIURL}/users/register`, {\n          //     method: \"POST\",\n          //     headers: {\n          //         'Content-Type': 'application/json',\n\n          //     },\n          //     body: JSON.stringify({\n          //         user:{\n          //             username,\n          //             password\n          //         }\n          //     })\n          // })\n          // .catch(console.error);\n          // const responseObj = await response.json();\n          // console.log(responseObj)\n          // setToken(responseObj.data.token)\n          // console.log(setToken)\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <hr></hr>\n\n        <input\n          type=\"text\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <hr></hr>\n        <input\n          type=\"text\"\n          placeholder=\"confirm password\"\n          value={confirmPassword}\n          onChange={(event) => setConfirmPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}