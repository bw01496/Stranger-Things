{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { callApi } from \"../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    setToken,\n    setUsers\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const params = useParams();\n  const [loggedIn, setLoggedin] = useState(false); // function logIn(response){\n  //     if (response.data){\n  //         setToken(response.data.token)\n  //         if(response.data.token == ''){\n  //             setLoggedin(false)\n  //         }else{\n  //             setLoggedin(true)\n  //             navigate('/profile')\n  //         }\n  //     }\n  // }\n  // function isLoggedIn(){\n  //         return token === ''\n  // }\n  // function logOut(){\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault(); // const URL = (`${APIURL}/users/login`)\n        // console.log(URL)\n\n        const respObj = await callApi({\n          url: `/users/login`,\n          method: \"POST\",\n          body: {\n            user: {\n              username,\n              password\n            }\n          }\n        }); //    try{\n        //     const response = await fetch(URL, {\n        //         method: \"POST\",\n        //         headers: {\n        //             'Content-Type': 'application/json',\n        //             // 'Authorization': 'Bearer ${token}'\n        //         },\n        //         body: JSON.stringify({\n        //             user:{\n        //                 username,\n        //                 password\n        //             }\n        //         })\n        //     })\n        //     const responseObj = await response.json();\n        //     console.log(responseObj)\n        //     return responseObj\n        //    } catch (error){\n        //        console.error(error)\n        //    }\n        //    console.log(responseObj.data.token)\n        //    console.log(responseObj)\n\n        console.log(respObj);\n\n        if (respObj.data) {\n          const userResp = await callApi({\n            url: \"/users/me\",\n            token: respObj.data.token\n          });\n          console.log(userResp.data.username);\n          setToken(respObj.data.token);\n          setUsers(userResp.data.username);\n\n          if (respObj.data.token) {\n            navigate(\"/profile\");\n          }\n        } // if(respObj.data.token) {\n        // setToken(responseObj.data.token)\n        // navigate('/');\n        // }\n\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !password || !username,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"Bvj0Ceu5ecCXJp4dUoomrZtVtxI=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/Login.js"],"names":["React","useState","useParams","useNavigate","callApi","cohortName","APIURL","Login","setToken","setUsers","username","setUsername","password","setPassword","navigate","params","loggedIn","setLoggedin","event","preventDefault","respObj","url","method","body","user","console","log","data","userResp","token","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,cAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,EAAxE;;AAEA,MAAME,KAAK,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA2B;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC,CALwC,CAOxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,QAAQ,EAAE,MAAOiB,KAAP,IAAiB;AACzBA,QAAAA,KAAK,CAACC,cAAN,GADyB,CAEzB;AACA;;AACA,cAAMC,OAAO,GAAG,MAAMhB,OAAO,CAAC;AAC5BiB,UAAAA,GAAG,EAAG,cADsB;AAE5BC,UAAAA,MAAM,EAAE,MAFoB;AAG5BC,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE;AACJd,cAAAA,QADI;AAEJE,cAAAA;AAFI;AADF;AAHsB,SAAD,CAA7B,CAJyB,CAczB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;;AACA,YAAIA,OAAO,CAACO,IAAZ,EAAkB;AAChB,gBAAMC,QAAQ,GAAG,MAAMxB,OAAO,CAAC;AAC7BiB,YAAAA,GAAG,EAAE,WADwB;AAE7BQ,YAAAA,KAAK,EAAET,OAAO,CAACO,IAAR,CAAaE;AAFS,WAAD,CAA9B;AAIAJ,UAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACD,IAAT,CAAcjB,QAA1B;AACAF,UAAAA,QAAQ,CAACY,OAAO,CAACO,IAAR,CAAaE,KAAd,CAAR;AACApB,UAAAA,QAAQ,CAACmB,QAAQ,CAACD,IAAT,CAAcjB,QAAf,CAAR;;AACA,cAAIU,OAAO,CAACO,IAAR,CAAaE,KAAjB,EAAwB;AACtBf,YAAAA,QAAQ,CAAC,UAAD,CAAR;AACD;AACF,SAnDwB,CAoDzB;AAEA;AACA;AACA;;AACD,OA1DH;AAAA,8BA4DE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAEJ,QAHT;AAIE,QAAA,QAAQ,EAAGQ,KAAD,IAAWP,WAAW,CAACO,KAAK,CAACY,MAAN,CAAaC,KAAd;AAJlC;AAAA;AAAA;AAAA;AAAA,cA5DF,eAkEE;AAAA;AAAA;AAAA;AAAA,cAlEF,eAoEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAEnB,QAHT;AAIE,QAAA,QAAQ,EAAGM,KAAD,IAAWL,WAAW,CAACK,KAAK,CAACY,MAAN,CAAaC,KAAd;AAJlC;AAAA;AAAA;AAAA;AAAA,cApEF,eA0EE;AAAA;AAAA;AAAA;AAAA,cA1EF,eA2EE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,CAACnB,QAAD,IAAa,CAACF,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3EF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AA0FD,CArHD;;GAAMH,K;UAGaJ,W,EACFD,S;;;KAJXK,K;AAuHN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { callApi } from \"../util/api\";\n\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Login = ({ setToken, setUsers }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const params = useParams();\n  const [loggedIn, setLoggedin] = useState(false);\n\n  // function logIn(response){\n  //     if (response.data){\n  //         setToken(response.data.token)\n  //         if(response.data.token == ''){\n  //             setLoggedin(false)\n  //         }else{\n  //             setLoggedin(true)\n  //             navigate('/profile')\n  //         }\n  //     }\n  // }\n\n  // function isLoggedIn(){\n  //         return token === ''\n  // }\n\n  // function logOut(){\n\n  // }\n\n  return (\n    <>\n      <h1>Login</h1>\n      {/* // we need to send a fetch request, so we can get the token\n          // in order to get a token, the server wants... username and password \n          //When I hit submit it is supposed the username and password from the API. \n          \n          */}\n\n      <form\n        onSubmit={async (event) => {\n          event.preventDefault();\n          // const URL = (`${APIURL}/users/login`)\n          // console.log(URL)\n          const respObj = await callApi({\n            url: `/users/login`,\n            method: \"POST\",\n            body: {\n              user: {\n                username,\n                password,\n              },\n            },\n          });\n          //    try{\n          //     const response = await fetch(URL, {\n          //         method: \"POST\",\n          //         headers: {\n          //             'Content-Type': 'application/json',\n          //             // 'Authorization': 'Bearer ${token}'\n\n          //         },\n          //         body: JSON.stringify({\n          //             user:{\n          //                 username,\n          //                 password\n          //             }\n          //         })\n          //     })\n          //     const responseObj = await response.json();\n          //     console.log(responseObj)\n          //     return responseObj\n\n          //    } catch (error){\n          //        console.error(error)\n\n          //    }\n          //    console.log(responseObj.data.token)\n          //    console.log(responseObj)\n          console.log(respObj);\n          if (respObj.data) {\n            const userResp = await callApi({\n              url: \"/users/me\",\n              token: respObj.data.token,\n            });\n            console.log(userResp.data.username);\n            setToken(respObj.data.token);\n            setUsers(userResp.data.username);\n            if (respObj.data.token) {\n              navigate(\"/profile\");\n            }\n          }\n          // if(respObj.data.token) {\n\n          // setToken(responseObj.data.token)\n          // navigate('/');\n          // }\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <hr></hr>\n\n        <input\n          type=\"text\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <hr></hr>\n        <button type=\"submit\" disabled={!password || !username}>\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}