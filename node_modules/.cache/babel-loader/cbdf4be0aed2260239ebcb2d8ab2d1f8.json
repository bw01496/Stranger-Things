{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { callApi } from '../util/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = '2108-ECE-RM-WEB-PT';\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`; // Include token here in createpost after I have that set up\n\nconst CreatePosts = setPosts => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [location, setLocation] = useState('');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log({\n      title,\n      description,\n      price,\n      location\n    });\n    const response = await callApi({\n      url: '/posts',\n      method: 'POST',\n      body: {\n        post: {\n          title,\n          description,\n          price,\n          location\n        }\n      }\n    });\n    console.log('response: ', response);\n    const respPost = await callApi({\n      url: '/posts'\n    });\n    console.log('respPost: ', respPost);\n    setPosts(respPost.data.posts); // const response = await fetch(`${APIURL}/posts`, {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-type': 'Application/json',\n    //     },\n    //     body: JSON.stringify({\n    //         title,\n    //         body,\n    //     })\n    // });\n    // const data = await response.json();\n    // setPosts([data, ...posts]);\n    // setTitle('');\n    // setBody('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        value: price,\n        onChange: event => setPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: location,\n        onChange: event => setLocation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-primary\",\n        children: \"Posts!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreatePosts, \"pRVgYaXy6t+k4xChXwPzyE0UR4g=\");\n\n_c = CreatePosts;\nexport default CreatePosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePosts\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/CreatePost.js"],"names":["React","useState","callApi","cohortName","APIURL","CreatePosts","setPosts","title","setTitle","description","setDescription","price","setPrice","location","setLocation","handleSubmit","event","preventDefault","console","log","response","url","method","body","post","respPost","data","posts","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { callApi } from '../util/api';\n\n\nconst cohortName = '2108-ECE-RM-WEB-PT';\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n// Include token here in createpost after I have that set up\n\nconst CreatePosts = (setPosts) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [location, setLocation] = useState('');\n\n    const handleSubmit = async (event) =>{\n        event.preventDefault();\n        console.log({title, description, price, location});\n        const response = await callApi({\n            url: '/posts',\n            method: 'POST',\n            body:{\n                post: {\n                    title,\n                    description,\n                    price,\n                    location\n                }\n            }\n        });\n        console.log('response: ', response);\n        const respPost = await callApi({url: '/posts'});\n        console.log ('respPost: ', respPost)\n        setPosts(respPost.data.posts);\n\n        // const response = await fetch(`${APIURL}/posts`, {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-type': 'Application/json',\n        //     },\n        //     body: JSON.stringify({\n        //         title,\n        //         body,\n        //     })\n        // });\n        // const data = await response.json();\n        // setPosts([data, ...posts]);\n        // setTitle('');\n        // setBody('');\n        \n    }\n    return <>\n        <h3>\n            Create a Post\n        </h3>\n        <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Title\" value={title} onChange={(event) => setTitle(event.target.value)}></input>\n        <input type=\"text\" placeholder=\"Description\" value={description} onChange={(event) => setDescription(event.target.value)}></input>\n        <input type=\"text\" placeholder=\"Price\" value={price} onChange={(event) => setPrice(event.target.value)}></input>\n        <input type=\"text\" placeholder=\"Location\" value={location} onChange={(event) => setLocation(event.target.value)}></input>\n        <button type =\"submit\" className =\"btn btn-outline-primary\">Posts!</button>\n        </form>\n        </>\n\n}\n\nexport default CreatePosts; "]},"metadata":{},"sourceType":"module"}