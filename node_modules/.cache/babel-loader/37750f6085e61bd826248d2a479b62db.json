{"ast":null,"code":"const WEB = \"https://strangers-things.herokuapp.com/api/2108-ECE-RM-WEB-PT\";\nexport const callApi = async _ref => {\n  let {\n    url,\n    method,\n    body,\n    token\n  } = _ref;\n  console.log(token, url);\n\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    if (token) options.headers[\"Authorization\"] = `Bearer ${token}`;\n    const response = await fetch(`${WEB}${url}`, options);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/util/api.js"],"names":["WEB","callApi","url","method","body","token","console","log","options","toUpperCase","headers","JSON","stringify","response","fetch","data","json","error"],"mappings":"AAAA,MAAMA,GAAG,GAAG,+DAAZ;AAEA,OAAO,MAAMC,OAAO,GAAG,cAAwC;AAAA,MAAjC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,GAAiC;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmBH,GAAnB;;AACA,MAAI;AACF,UAAMM,OAAO,GAAG;AACdL,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACM,WAAP,EAAH,GAA0B,KAD1B;AAEdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFK;AAKdN,MAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeR,IAAf;AALQ,KAAhB;AAOA,QAAIC,KAAJ,EAAWG,OAAO,CAACE,OAAR,CAAgB,eAAhB,IAAoC,UAASL,KAAM,EAAnD;AACX,UAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,GAAI,GAAEE,GAAI,EAAd,EAAiBM,OAAjB,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACD,GAZD,CAYE,OAAOE,KAAP,EAAc;AACdX,IAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACD;AACF,CAjBM","sourcesContent":["const WEB = \"https://strangers-things.herokuapp.com/api/2108-ECE-RM-WEB-PT\";\n\nexport const callApi = async ({ url, method, body, token }) => {\n  console.log(token, url);\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n    if (token) options.headers[\"Authorization\"] = `Bearer ${token}`;\n    const response = await fetch(`${WEB}${url}`, options);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}