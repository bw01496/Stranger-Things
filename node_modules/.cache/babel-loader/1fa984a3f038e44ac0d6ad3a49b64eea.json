{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { callApi } from \"../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`; // Include token here in createpost after I have that set up\n\nconst CreatePosts = _ref => {\n  _s();\n\n  let {\n    token,\n    setPosts\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log({\n      title,\n      description,\n      price,\n      location\n    });\n    const response = await callApi({\n      url: \"/posts\",\n      method: \"POST\",\n      token,\n      body: {\n        post: {\n          title,\n          description,\n          price,\n          location\n        }\n      }\n    });\n    console.log(\"response: \", response);\n    const respPost = await callApi({\n      url: \"/posts\",\n      token\n    });\n    console.log(\"respPost: \", respPost);\n    console.log(setPosts);\n    setPosts(respPost.data.posts); // const response = await fetch(`${APIURL}/posts`, {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-type': 'Application/json',\n    //     },\n    //     body: JSON.stringify({\n    //         title,\n    //         body,\n    //     })\n    // });\n    // const data = await response.json();\n    // setPosts([data, ...posts]);\n    // setTitle('');\n    // setBody('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        value: price,\n        onChange: event => setPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: location,\n        onChange: event => setLocation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-primary\",\n        children: \"Posts!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreatePosts, \"/nKkgbidQxH/wVrtK3lJ6ufzE5M=\");\n\n_c = CreatePosts;\nexport default CreatePosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePosts\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/CreatePost.js"],"names":["React","useState","callApi","cohortName","APIURL","CreatePosts","token","setPosts","title","setTitle","description","setDescription","price","setPrice","location","setLocation","handleSubmit","event","preventDefault","console","log","response","url","method","body","post","respPost","data","posts","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { callApi } from \"../util/api\";\n\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n// Include token here in createpost after I have that set up\n\nconst CreatePosts = ({ token, setPosts }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log({ title, description, price, location });\n    const response = await callApi({\n      url: \"/posts\",\n      method: \"POST\",\n      token,\n      body: {\n        post: {\n          title,\n          description,\n          price,\n          location,\n        },\n      },\n    });\n    console.log(\"response: \", response);\n    const respPost = await callApi({ url: \"/posts\", token });\n    console.log(\"respPost: \", respPost);\n    console.log(setPosts);\n    setPosts(respPost.data.posts);\n\n    // const response = await fetch(`${APIURL}/posts`, {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-type': 'Application/json',\n    //     },\n    //     body: JSON.stringify({\n    //         title,\n    //         body,\n    //     })\n    // });\n    // const data = await response.json();\n    // setPosts([data, ...posts]);\n    // setTitle('');\n    // setBody('');\n  };\n  return (\n    <>\n      <h3>Create a Post</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(event) => setDescription(event.target.value)}\n        ></input>\n\n        <input\n          type=\"text\"\n          placeholder=\"Price\"\n          value={price}\n          onChange={(event) => setPrice(event.target.value)}\n        ></input>\n\n        <input\n          type=\"text\"\n          placeholder=\"Location\"\n          value={location}\n          onChange={(event) => setLocation(event.target.value)}\n        ></input>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary\">\n          Posts!\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default CreatePosts;\n"]},"metadata":{},"sourceType":"module"}