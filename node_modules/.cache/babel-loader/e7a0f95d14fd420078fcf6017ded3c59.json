{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/Posts.js\";\nimport React from \"react\";\nimport { callApi } from \"../util/api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  let {\n    posts,\n    token,\n    fetchPosts\n  } = _ref;\n\n  const handleDelete = async postId => {\n    console.log(\"url: \", `/posts/${postId}`);\n    const respObj = await callApi({\n      method: \"DELETE\",\n      url: `/posts/${postId}`,\n      token\n    });\n    console.log(\"respObj: \", respObj);\n    await fetchPosts();\n  }; // const handleEdit = async (postId) => {\n  //   console.log(\"url: \", `/posts/${postId}`);\n  //   const respObj = await callApi({\n  //     method: \"PATCH\",\n  //     url: `/posts/${postId}`,\n  //     token,\n  //     body: {\n  //       // post: {\n  //       //   title,\n  //       //   description,\n  //       //   price,\n  //       //   location,\n  //       // },\n  //     },\n  //   });\n  //   console.log(\"respObj: \", respObj);\n  //   await fetchPosts();\n  // };\n  // const [postsx, setPosts] = useState([]);\n  // const handleDelete = async (postIdToDelete) => {\n  //   console.log(\"postIdToDelete \", postIdToDelete);\n  //   const response = await fetch(`${APIURL}/posts/${postIdToDelete}`, {\n  //     method: \"DELETE\",\n  //     token,\n  //   });\n  //   const data = await response.json();\n  //   console.log(\"data: \", data);\n  //   if (data) {\n  //     const newPosts = posts.filter((post) => post._id !== postIdToDelete);\n  //     setPosts(newPosts);\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"List of Posts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), posts.map(post =>\n    /*#__PURE__*/\n\n    /* console.log(post)*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), token && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        onClick: () => handleDelete(post._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), post.isAuthor === false ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/messages\",\n        state: {\n          id: post._id\n        },\n        className: \"buttonMessage\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : null]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/Posts.js"],"names":["React","callApi","Link","Posts","posts","token","fetchPosts","handleDelete","postId","console","log","respObj","method","url","map","post","title","description","price","location","_id","isAuthor","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,KAAK,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAiC;;AAC9C,QAAMC,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAsB,UAASF,MAAO,EAAtC;AACA,UAAMG,OAAO,GAAG,MAAMV,OAAO,CAAC;AAC5BW,MAAAA,MAAM,EAAE,QADoB;AAE5BC,MAAAA,GAAG,EAAG,UAASL,MAAO,EAFM;AAG5BH,MAAAA;AAH4B,KAAD,CAA7B;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,OAAzB;AACA,UAAML,UAAU,EAAhB;AACD,GATD,CAD8C,CAW9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,KAAK,CAACU,GAAN,CAAWC,IAAD;AAAA;;AACT;AACA;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF,EAcGd,KAAK,iBACJ;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAGE,QAAA,OAAO,EAAE,MAAME,YAAY,CAACQ,IAAI,CAACK,GAAN,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,EAuBGL,IAAI,CAACM,QAAL,KAAkB,KAAlB,gBACC,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,WADL;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,EAAE,EAAEP,IAAI,CAACK;AAAX,SAFT;AAGE,QAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAQG,IA/BN;AAAA,OAAUL,IAAI,CAACK,GAAf;AAAA;AAAA;AAAA;AAAA,YAFD,CAJH;AAAA,kBADF;AA2CD,CAvFD;;KAAMjB,K;AAyFN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { callApi } from \"../util/api\";\nimport { Link } from \"react-router-dom\";\n\nconst Posts = ({ posts, token, fetchPosts }) => {\n  const handleDelete = async (postId) => {\n    console.log(\"url: \", `/posts/${postId}`);\n    const respObj = await callApi({\n      method: \"DELETE\",\n      url: `/posts/${postId}`,\n      token,\n    });\n    console.log(\"respObj: \", respObj);\n    await fetchPosts();\n  };\n  // const handleEdit = async (postId) => {\n  //   console.log(\"url: \", `/posts/${postId}`);\n  //   const respObj = await callApi({\n  //     method: \"PATCH\",\n  //     url: `/posts/${postId}`,\n  //     token,\n  //     body: {\n  //       // post: {\n  //       //   title,\n  //       //   description,\n  //       //   price,\n  //       //   location,\n  //       // },\n  //     },\n  //   });\n  //   console.log(\"respObj: \", respObj);\n  //   await fetchPosts();\n  // };\n\n  // const [postsx, setPosts] = useState([]);\n  // const handleDelete = async (postIdToDelete) => {\n  //   console.log(\"postIdToDelete \", postIdToDelete);\n  //   const response = await fetch(`${APIURL}/posts/${postIdToDelete}`, {\n  //     method: \"DELETE\",\n  //     token,\n  //   });\n  //   const data = await response.json();\n  //   console.log(\"data: \", data);\n  //   if (data) {\n  //     const newPosts = posts.filter((post) => post._id !== postIdToDelete);\n  //     setPosts(newPosts);\n  //   }\n  // };\n  return (\n    <>\n      <h3>\n        <u>List of Posts:</u>\n      </h3>\n      {posts.map((post) => (\n        /* console.log(post)*/\n        <div key={post._id}>\n          <h1>{post.title}</h1>\n          <p>{post.description}</p>\n          <p>{post.price}</p>\n          <p>{post.location}</p>\n          {/* {token && (\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              onClick={() => handleEdit(post._id)}\n            >\n              Edit\n            </button>\n          )} */}\n          {token && (\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={() => handleDelete(post._id)}\n            >\n              Delete\n            </button>\n          )}\n          {post.isAuthor === false ? (\n            <Link\n              to=\"/messages\"\n              state={{ id: post._id }}\n              className=\"buttonMessage\"\n            >\n              Message\n            </Link>\n          ) : null}\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}