{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { callApi } from \"../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Messages = _ref => {\n  _s();\n\n  let {\n    posts,\n    postId\n  } = _ref;\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation();\n  const {\n    id\n  } = location.state;\n\n  const sendMessage = async event => {\n    event.preventDefault();\n    console.log(`${APIURL}/posts/${id}`);\n    const response = await callApi({\n      url: `/posts/${id}/messages`,\n      method: \"POST\",\n      token,\n      body: {\n        message: {\n          content: message\n        }\n      }\n    });\n    console.log(\"response: \", response);\n    const respPost = await callApi({\n      url: `/posts/${id}/messages`,\n      token\n    });\n    console.log(\"respPost: \", respPost); // console.log(setPosts);\n\n    postId(respPost.data.posts);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Send a Message: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), posts.map(post => id === post._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: post.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: async event => {\n            event.preventDefault();\n            sendMessage(message);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"message\",\n            value: message,\n            onChange: event => setMessage(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this) : ok)]\n    }, void 0, true);\n  };\n};\n\n_s(Messages, \"dwANQcTixha6MT5emQbH8jhQ9QU=\", true);\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/Messages.js"],"names":["React","useState","useEffect","callApi","cohortName","APIURL","Messages","posts","postId","message","setMessage","location","useLocation","id","state","sendMessage","event","preventDefault","console","log","response","url","method","token","body","content","respPost","data","map","post","_id","title","price","description","target","value","ok"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,EAAxE;;AAEA,MAAME,QAAQ,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAsB;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMU,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASF,QAAQ,CAACG,KAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEd,MAAO,UAASQ,EAAG,EAAlC;AACA,UAAMO,QAAQ,GAAG,MAAMjB,OAAO,CAAC;AAC7BkB,MAAAA,GAAG,EAAG,UAASR,EAAG,WADW;AAE7BS,MAAAA,MAAM,EAAE,MAFqB;AAG7BC,MAAAA,KAH6B;AAI7BC,MAAAA,IAAI,EAAE;AACJf,QAAAA,OAAO,EAAE;AACPgB,UAAAA,OAAO,EAAEhB;AADF;AADL;AAJuB,KAAD,CAA9B;AAUAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAA1B;AACA,UAAMM,QAAQ,GAAG,MAAMvB,OAAO,CAAC;AAAEkB,MAAAA,GAAG,EAAG,UAASR,EAAG,WAApB;AAAgCU,MAAAA;AAAhC,KAAD,CAA9B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BO,QAA1B,EAfmC,CAgBnC;;AACAlB,IAAAA,MAAM,CAACkB,QAAQ,CAACC,IAAT,CAAcpB,KAAf,CAAN;AAEA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGA,KAAK,CAACqB,GAAN,CAAWC,IAAD,IACThB,EAAE,KAAKgB,IAAI,CAACC,GAAZ,gBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAMH,IAAI,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,oBAAMJ,IAAI,CAAClB;AAAX;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AACE,UAAA,QAAQ,EAAE,MAAOK,KAAP,IAAiB;AACzBA,YAAAA,KAAK,CAACC,cAAN;AACAF,YAAAA,WAAW,CAACN,OAAD,CAAX;AACD,WAJH;AAAA,kCAME;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,SAFd;AAGE,YAAA,KAAK,EAAEA,OAHT;AAIE,YAAA,QAAQ,EAAGO,KAAD,IAAWN,UAAU,CAACM,KAAK,CAACkB,MAAN,CAAaC,KAAd;AAJjC;AAAA;AAAA;AAAA;AAAA,kBANF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAA2BN,IAAI,CAAChB,EAAhC;AAAA;AAAA;AAAA;AAAA,cADF,GAsBEuB,EAvBH,CAFH;AAAA,oBADF;AA+BD,GAlDD;AAmDD,CAxDD;;GAAM9B,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { callApi } from \"../util/api\";\n\nconst cohortName = \"2108-ECE-RM-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Messages = ({ posts, postId }) => {\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation();\n  const { id } = location.state;\n\n  const sendMessage = async (event) => {\n    event.preventDefault();\n    console.log(`${APIURL}/posts/${id}`);\n    const response = await callApi({\n      url: `/posts/${id}/messages`,\n      method: \"POST\",\n      token,\n      body: {\n        message: {\n          content: message,\n        },\n      },\n    });\n    console.log(\"response: \", response);\n    const respPost = await callApi({ url: `/posts/${id}/messages`, token });\n    console.log(\"respPost: \", respPost);\n    // console.log(setPosts);\n    postId(respPost.data.posts);\n\n    return (\n      <>\n        <h1>Send a Message: </h1>\n        {posts.map((post) =>\n          id === post._id ? (\n            <div className=\"post\" key={post.id}>\n              <h2>{post.title}</h2>\n              <h4>{post.price}</h4>\n              <div>{post.description}</div>\n              <div>{post.location}</div>\n              <form\n                onSubmit={async (event) => {\n                  event.preventDefault();\n                  sendMessage(message);\n                }}\n              >\n                <input\n                  type=\"text\"\n                  placeholder=\"message\"\n                  value={message}\n                  onChange={(event) => setMessage(event.target.value)}\n                ></input>\n                <button>Send Message</button>\n              </form>\n            </div>\n          ) : (\n            ok\n          )\n        )}\n      </>\n    );\n  };\n};\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}