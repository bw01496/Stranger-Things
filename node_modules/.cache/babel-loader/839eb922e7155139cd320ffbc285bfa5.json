{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport { callApi } from '../util/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = '2108-ECE-RM-WEB-PT';\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login/Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        const response = await fetch(`${APIURL}/users/register`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user: {\n              username,\n              password\n            }\n          })\n        }).catch(console.error);\n        const responseObj = await response.json();\n        console.log(responseObj);\n        setToken(responseObj.data.token);\n        console.log(setToken);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"confirm password\",\n        value: confirmPassword,\n        onChange: event => setConfirmPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"z+4ZjZgef9yfPF00ZCUTjY+rvUU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/Register.js"],"names":["React","useState","useParams","useNavigate","callApi","cohortName","APIURL","Register","setToken","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","navigate","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","user","catch","console","error","responseObj","json","log","data","token","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAGA,MAAMC,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,EAAxE;;AAEA,MAAME,QAAQ,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,sBAAO;AAAA,4BAKX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALW,eAOX;AAAM,MAAA,QAAQ,EAAE,MAAMa,KAAN,IAAe;AACvBA,QAAAA,KAAK,CAACC,cAAN;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,MAAO,iBAAX,EAA6B;AACrDc,UAAAA,MAAM,EAAE,MAD6C;AAErDC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAF4C;AAMrDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,YAAAA,IAAI,EAAC;AACDhB,cAAAA,QADC;AAEDE,cAAAA;AAFC;AADY,WAAf;AAN+C,SAA7B,CAAL,CAatBe,KAbsB,CAahBC,OAAO,CAACC,KAbQ,CAAvB;AAcA,cAAMC,WAAW,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAA1B;AACAH,QAAAA,OAAO,CAACI,GAAR,CAAYF,WAAZ;AACArB,QAAAA,QAAQ,CAACqB,WAAW,CAACG,IAAZ,CAAiBC,KAAlB,CAAR;AACAN,QAAAA,OAAO,CAACI,GAAR,CAAYvB,QAAZ;AAEH,OArBL;AAAA,8BAsBQ;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,KAAK,EAAEC,QAAjD;AACA,QAAA,QAAQ,EAAGO,KAAD,IAAWN,WAAW,CAACM,KAAK,CAACkB,MAAN,CAAaC,KAAd;AADhC;AAAA;AAAA;AAAA;AAAA,cAtBR,eAwBQ;AAAA;AAAA;AAAA;AAAA,cAxBR,eA0BQ;AAAO,QAAA,IAAI,EAAE,MAAb;AAAoB,QAAA,WAAW,EAAG,UAAlC;AAA6C,QAAA,KAAK,EAAExB,QAApD;AACA,QAAA,QAAQ,EAAIK,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACkB,MAAN,CAAaC,KAAd;AADjC;AAAA;AAAA;AAAA;AAAA,cA1BR,eA4BQ;AAAA;AAAA;AAAA;AAAA,cA5BR,eA6BQ;AAAO,QAAA,IAAI,EAAE,MAAb;AAAoB,QAAA,WAAW,EAAG,kBAAlC;AAAqD,QAAA,KAAK,EAAEtB,eAA5D;AACA,QAAA,QAAQ,EAAIG,KAAD,IAAWF,kBAAkB,CAACE,KAAK,CAACkB,MAAN,CAAaC,KAAd;AADxC;AAAA;AAAA;AAAA;AAAA,cA7BR,eA+BQ;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BR;AAAA;AAAA;AAAA;AAAA;AAAA,YAPW;AAAA,kBAAP;AAyCH,CA/CD;;GAAM5B,Q;UAIeJ,W;;;KAJfI,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport { useParams,useNavigate } from 'react-router';\nimport { callApi } from '../util/api';\n\n\nconst cohortName = '2108-ECE-RM-WEB-PT';\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Register = ({setToken}) =>{\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const navigate = useNavigate();\n\n    return <>\n\n{/* Make it so my password and confirm password have to be equal in order for them to register.  */}\n\n\n<h1>Login/Register</h1>\n\n<form onSubmit={async(event) =>{\n        event.preventDefault();\n        const response = await fetch(`${APIURL}/users/register`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n        \n            },\n            body: JSON.stringify({\n                user:{\n                    username,\n                    password\n                }\n            })\n        })\n        .catch(console.error);\n        const responseObj = await response.json();\n        console.log(responseObj)\n        setToken(responseObj.data.token)\n        console.log(setToken)\n        \n    }}>\n        <input type=\"text\" placeholder=\"username\" value={username} \n        onChange={(event) => setUsername(event.target.value)}></input>\n        <hr></hr>\n\n        <input type= \"text\" placeholder = \"password\" value={password} \n        onChange ={(event) => setPassword(event.target.value)}></input>\n        <hr></hr>\n        <input type= \"text\" placeholder = \"confirm password\" value={confirmPassword} \n        onChange ={(event) => setConfirmPassword(event.target.value)}></input>\n        <button type =\"submit\" >Submit</button>\n    </form>\n    </>\n}\n\nexport default Register;    \n   \n"]},"metadata":{},"sourceType":"module"}