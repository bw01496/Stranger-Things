{"ast":null,"code":"var _jsxFileName = \"/Users/jinzo/Desktop/projects/StrangerThings/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cohortName = '2108-ECE-RM-WEB-PT';\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const params = useParams();\n\n  function loggedIn() {}\n\n  function isLoggedIn() {}\n\n  function logOut() {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login/Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        console.log(`${APIURL}/users/${params.method}`);\n        const response = await fetch(`${APIURL}/users/${params.method}`, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json' // 'Authorization': 'Bearer ${token}'\n\n          },\n          body: JSON.stringify({\n            user: {\n              username,\n              password\n            }\n          })\n        });\n        const responseObj = await response.json();\n        console.log(responseObj); // setToken(responseObj.data.token)\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"vChOxR6W3NlnuMuWWQ798bx/Q/o=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jinzo/Desktop/projects/StrangerThings/src/components/Login.js"],"names":["React","useState","useParams","useNavigate","cohortName","APIURL","Login","setToken","username","setUsername","password","setPassword","navigate","params","loggedIn","isLoggedIn","logOut","event","preventDefault","console","log","method","response","fetch","headers","body","JSON","stringify","user","responseObj","json","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAmBC,WAAnB,QAAsC,cAAtC;;;AAGA,MAAMC,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,EAAxE;;AAKA,MAAME,KAAK,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGX,SAAS,EAAxB;;AAEA,WAASY,QAAT,GAAmB,CAElB;;AAED,WAASC,UAAT,GAAqB,CAEpB;;AAED,WAASC,MAAT,GAAiB,CAEhB;;AAGD,sBAAO;AAAA,4BAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO,eAUP;AAAM,MAAA,QAAQ,EAAE,MAAMC,KAAN,IAAe;AAC3BA,QAAAA,KAAK,CAACC,cAAN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEf,MAAO,UAASQ,MAAM,CAACQ,MAAO,EAA7C;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAElB,MAAO,UAASQ,MAAM,CAACQ,MAAO,EAAlC,EAAqC;AAC7DA,UAAAA,MAAM,EAAE,MADqD;AAE7DG,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX,CAEL;;AAFK,WAFoD;AAO7DC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,YAAAA,IAAI,EAAC;AACDpB,cAAAA,QADC;AAEDE,cAAAA;AAFC;AADY,WAAf;AAPuD,SAArC,CAA5B;AAcA,cAAMmB,WAAW,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA1B;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ,EAlB2B,CAmB3B;AACH,OApBD;AAAA,8BAqBI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,KAAK,EAAErB,QAAjD;AACA,QAAA,QAAQ,EAAGS,KAAD,IAAWR,WAAW,CAACQ,KAAK,CAACc,MAAN,CAAaC,KAAd;AADhC;AAAA;AAAA;AAAA;AAAA,cArBJ,eAuBI;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAyBI;AAAO,QAAA,IAAI,EAAE,MAAb;AAAoB,QAAA,WAAW,EAAG,UAAlC;AAA6C,QAAA,KAAK,EAAEtB,QAApD;AACA,QAAA,QAAQ,EAAIO,KAAD,IAAWN,WAAW,CAACM,KAAK,CAACc,MAAN,CAAaC,KAAd;AADjC;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA2BI;AAAA;AAAA;AAAA;AAAA,cA3BJ,eA4BI;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVO;AAAA,kBAAP;AA0CH,CA7DD;;GAAM1B,K;UAGeH,W,EACFD,S;;;KAJbI,K;AA+DN,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport { useParams,useNavigate } from 'react-router';\n\n\nconst cohortName = '2108-ECE-RM-WEB-PT';\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n\n\n\nconst Login = ({setToken}) =>{\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n    const params = useParams();\n\n    function loggedIn(){\n\n    }\n    \n    function isLoggedIn(){\n\n    }\n\n    function logOut(){\n\n    }\n\n\n    return <>\n\n    <h1>Login/Register</h1>\n    {/* // we need to send a fetch request, so we can get the token\n          // in order to get a token, the server wants... username and password \n          //When I hit submit it is supposed the username and password from the API. \n          \n          */}\n\n\n    <form onSubmit={async(event) =>{\n        event.preventDefault();\n        console.log(`${APIURL}/users/${params.method}`)\n        const response = await fetch(`${APIURL}/users/${params.method}`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Authorization': 'Bearer ${token}'\n        \n            },\n            body: JSON.stringify({\n                user:{\n                    username,\n                    password\n                }\n            })\n        })\n        const responseObj = await response.json();\n        console.log(responseObj)\n        // setToken(responseObj.data.token)\n    }}>\n        <input type=\"text\" placeholder=\"username\" value={username} \n        onChange={(event) => setUsername(event.target.value)}></input>\n        <hr></hr>\n\n        <input type= \"text\" placeholder = \"password\" value={password} \n        onChange ={(event) => setPassword(event.target.value)}></input>\n        <hr></hr>\n        <button type =\"submit\" >Submit</button>\n        \n    </form>\n    </>\n}\n\nexport default Login;     "]},"metadata":{},"sourceType":"module"}